/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.10.2/userguide/building_java_projects.html in the Gradle documentation.
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
    
    maven {
        url = uri("https://maven.pkg.github.com/adf-python/adf-core-python")
        credentials {
            username = project.findProperty("gpr.user" as String) ?: System.getenv("USERNAME")
            password = project.findProperty("gpr.key" as String) ?: System.getenv("TOKEN")
        }
    }

    maven {
        url = 'https://sourceforge.net/projects/jsi/files/m2_repo'
    }
    maven {
        url = 'https://repo.enonic.com/public/'
    }
    maven {
        url 'https://jitpack.io'
    }
}

dependencies {

    // Use JUnit test framework.
    testImplementation libs.junit

    // This dependency is used by the application.
    implementation libs.guava

    implementation 'com.github.roborescue:rcrs-server:master-SNAPSHOT'
    implementation 'com.github.roborescue:adf-core-java:master-SNAPSHOT'
    implementation 'com.github.adf-python:adf-core-python:master-SNAPSHOT'
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

application {
    // Define the main class for the application.
    mainClass = 'org.example.App'
}
